<style>
  #desks {
    @apply mt-8 max-w-4xl mx-auto;
  }
  #desks :deep(form) {
    @apply bg-white px-8 py-6 mb-6 shadow rounded-lg mx-auto w-full max-w-xl;
  }
  #desks :deep(form input[type="text"]) {
    @apply mb-4 appearance-none block w-full px-3 py-2 border border-slate-300 rounded-md transition duration-150 ease-in-out;
  }
  #desks :deep(form input[type="text"]:focus) {
    @apply outline-none ring ring-indigo-300 border-indigo-300;
  }
  #desks :deep(form button) {
    @apply mt-4 w-full py-2 px-4 border border-transparent font-medium rounded-md text-white bg-indigo-600 transition duration-150 ease-in-out hover:bg-indigo-500 active:bg-indigo-700 focus:outline-none focus:border-indigo-700 focus:ring focus:ring-indigo-300;
  }
  #desks :deep(form .hint) {
    @apply my-4 text-slate-600 text-sm;
  }
  #desks :deep(form .drop) {
    @apply flex items-baseline justify-center space-x-1 my-2 p-4 border-2 border-dashed border-slate-300 rounded-md text-center text-slate-600;
  }
  #desks :deep(form .drop label) {
    @apply cursor-pointer font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500;
  }
  #desks :deep(form .drop p) {
    @apply text-sm text-slate-500;
  }
  #desks :deep(form .drop img) {
    @apply mx-auto h-12 w-12;
  }
  #desks :deep(form .entry) {
    @apply my-6 flex items-center justify-start space-x-6;
  }
  #desks :deep(form .entry img) {
    @apply w-32;
  }
  #desks :deep(form .entry .progress) {
    @apply w-full;
  }
  #desks :deep(form .entry .progress .value) {
    @apply text-left mb-2 text-xs font-semibold inline-block text-indigo-600;
  }
  #desks :deep(form .entry .progress .bar) {
    @apply flex h-2 overflow-hidden text-base bg-indigo-200 rounded-lg mb-4;
  }
  #desks :deep(form .entry .progress .bar > span) {
    @apply shadow-md bg-indigo-500;
    transition: width 1s ease;
  }
  #desks :deep(form .entry a) {
    @apply text-3xl font-bold text-slate-700 hover:text-red-700 cursor-pointer;
  }
  #desks :deep(form .error) {
    @apply block text-rose-600 my-2 text-sm leading-6;
  }
  #desks #photos {
    @apply flex flex-wrap items-center justify-center sm:justify-start;
  }
  #desks #photos div[id^="desks-"] {
    @apply inline-flex;
  }
  #desks #photos .photo {
    @apply text-center p-4 m-4 border-2 border-slate-300 rounded-xl;
  }
  #desks #photos .photo img {
    @apply h-64 sm:h-36 mx-auto object-fill;
  }
  #desks #photos .photo .name {
    @apply mt-2 text-base text-slate-600 font-medium;
  }
</style>

<h1>What's On Your Desk?</h1>
<div id="desks">
  <Form for={@form} submit="save" change="validate">
    <C.input field={@form[:name]} placeholder="Name" />

    <div class="hint">
      Add up to {@uploads.photos.max_entries} photos
      (max {trunc(@uploads.photos.max_file_size / 1_000_000)} MB each)
    </div>

    <div class="drop" phx-drop-target={@uploads.photos.ref}>
      <Phoenix.Component.live_file_input upload={@uploads.photos} />
      or drag and drop here
    </div>

    <C.error :for={err <- upload_errors(@uploads.photos)}>
      {Phoenix.Naming.humanize(err)}
    </C.error>

    <div :for={entry <- @uploads.photos.entries} class="entry">
      <Phoenix.Component.live_img_preview entry={entry} />

      <div class="progress">
        <div class="value">
          {entry.progress}%
        </div>
        <div class="bar">
          <span style={"width: #{entry.progress}%"}></span>
        </div>
        <C.error :for={err <- upload_errors(@uploads.photos, entry)}>
          {Phoenix.Naming.humanize(err)}
        </C.error>
      </div>

      <a phx-click="cancel" phx-value-ref={entry.ref}>
        &times;
      </a>
    </div>

    <C.button phx-disable-with="Uploading...">
      Upload
    </C.button>
  </Form>

  <div id="photos" phx-update="stream">
    <div :for={{dom_id, desk} <- @streams.desks} id={dom_id}>
      <div
        :for={
          {photo_location, index} <-
            Enum.with_index(desk.photo_locations)
        }
        class="photo"
      >
        <img src={photo_location} />
        <div class="name">
          {desk.name} ({index + 1})
        </div>
      </div>
    </div>
  </div>
</div>
